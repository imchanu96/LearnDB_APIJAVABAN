--DDL 데이터베이스 정의?

--CREATE TABLE

--테이블을 생성하는 구문 형식
--CREATE TABLE 테이블명(
--    컬럼명1 DATATYPE,
--    컬럼명2 DATATYPE,
--    컬럼명3 DATATYPE,
--    ,,,
--    컬럼명N DATATYPE
--);
--
--- 테이블명은 객체를 의미할 수 있는 이름을 사용한다(단수취급한다)
--- 테이블명은 다른 테이블의 이름과 중복되지 않아야 한다.
--- 한 테이블 내에서는 컬럼명이 중복되게 지정할 수 없다.
--- 테이블 이름은 지정하고 각 컬럼들은 괄호()로 묶어 지정한다.
--- 각 컬럼들은 컴마","로 구분되고, 테이블 생성문의 끝은 항상 세미콜론;으로 끝난다
--- 컬럼 뒤에 데이터 유형은 꼭 지정되어야 한다.
--- 테이블명과 컬럼명은 반드시 문자로 시작해야 하고, 벤더별로 길이에 대한 한계가 있다.
--- 벤더에서 사전에 정의한 예약어는 쓸 수 없다.
--- A-Z, a-z, 0-9, _, $, # 문자만 허용된다.
--테이블명이 잘못된 사례
--10_player       반드시 숫자가 아닌 문자로 시작되어야 함
--t-player        특수 문자 -는 허용되지 않음
--
--일반적으로 emp테이블의 no의 경우
--DB명 + DB계정명 + 테이블명 + 컬럼명 처럼 계층적 구조를 가진 전체 경로로 관리하고 있다.
--
--테이블 생성 주의 사항
--- 테이블 생성시 대/소문자 구분은 하지 않는다.
--기본적으로 테이블이나 컬럼명은 대문자로 만들어진다.
--- datetime 데이터 유형에는 별도로 크기를 지정하지 않는다.
--- 문자 데이터 유형은 반드시 가질 수  있는 최대 길이를 표시해야 한다.
--- 컬럼과 컬럼의 구분은 컴마로 하되, 마지막 컬럼은 콤마를 찍지 않는다.
--- 컬럼에 대한 제약조건이 있으면 constraint를 이용하여 추가할 수 있다.
--
--@생성된 테이블 구조 확인
--desc 테이블명;
--동기화


CREATE TABLE student(
    no number(3),
    name varchar2(10),
    scoreNum number(5,2)
);

desc student;